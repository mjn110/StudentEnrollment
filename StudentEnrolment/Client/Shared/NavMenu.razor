@inject NavigationManager Navigate
@inject HttpClient Client

<div class="top-row ps-3 navbar navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand pe-5" href="">Student Enrolment</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column ms-3">
        <div class="nav-item text-dark px-3">
            <NavLink class="nav-link text-secondary" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link text-secondary" href="add">
                <span class="oi oi-plus" aria-hidden="true"></span> New Student
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link text-secondary" href="search">
                <span class="oi oi-list" aria-hidden="true"></span> List & Search
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link text-secondary" href="#" @onclick="Signout">
                <span class="oi oi-ban" aria-hidden="true"></span> Signout
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Signout()
    {
        var response = await Client.PostAsync("https://localhost:7117/api/Account/SignOut", null);
        if (response.IsSuccessStatusCode)
        {
            Navigate.NavigateTo("/signin");
        }
    }
}
