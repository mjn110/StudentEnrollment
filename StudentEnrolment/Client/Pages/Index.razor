@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using StudentEnrolment.Shared;
@inject NavigationManager Navigate
@inject HttpClient Client

<PageTitle>Students</PageTitle>

@if (DisplayTitle)
{
    <h1>Students</h1>

    <p>Welcome to Student Enrolment app.</p>
}

<table class="table mb-5">
    <thead>
        <tr>
            <th>SID</th>
            <th class="d-none d-md-table-cell">Student name</th>
            <th class="d-none d-md-table-cell">Birth</th>
            <th>Course</th>
            <th class="d-none d-md-table-cell">Start</th>
            <th class="d-none d-md-table-cell">End</th>
            <th>Welsh</th>
            <th></th>
        </tr>
    </thead>
    <tbody class="align-content-center">
        @if(Students != null)
        {
            @foreach (var item in Students)
            {
                <tr>
                    <td class="align-middle text-center">@item.StudentId</td>
                    <td class="align-middle d-none d-md-table-cell">@item.StudentName</td>
                    <td class="align-middle d-none d-md-table-cell">@item.DateOfBirth.ToShortDateString()</td>
                    <td class="align-middle">@item.CourseName</td>
                    <td class="align-middle d-none d-md-table-cell">@item.StartDate.ToShortDateString()</td>
                    <td class="align-middle d-none d-md-table-cell">@item.EndDate.ToShortDateString()</td>
                    <td class="align-middle">@item.WelshLanguageProficiency</td>
                    <td>
                        <button class="btn btn-dark float-end rounded-0" @onclick="@(e => DeleteStudent(item.StudentId))">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">
                                <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0" />
                            </svg>
                        </button>
                        <button class="btn btn-outline-dark float-end rounded-0 mx-2" @onclick="@(e => GoToUpdate(item.StudentId))">
                            Edit
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code
{
    [Parameter]
    public bool DisplayTitle { get; set; } = true;
    [Parameter]
    public IEnumerable<Student> Students { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            var AuthenticationState = await Client.GetAsync("https://localhost:7117/api/Account/GetAuthenticationState").ConfigureAwait(false);
            if (AuthenticationState == null || !AuthenticationState.IsSuccessStatusCode)
            {
                Navigate.NavigateTo("/signin", true);
            }
        }
        catch (Exception)
        {
            Navigate.NavigateTo("/signin", true);
        }
        Students = await Client.GetFromJsonAsync<IEnumerable<Student>>("https://localhost:7117/api/Student").ConfigureAwait(false);
    }

    public async void DeleteStudent(int StudentId)
    {
        Client.DeleteAsync($"https://localhost:7117/api/Student/{StudentId}");
        Students = await Client.GetFromJsonAsync<IEnumerable<Student>>("https://localhost:7117/api/Student").ConfigureAwait(false);
        Navigate.NavigateTo("/", true);
    }

    public void GoToUpdate(int StudentId)
    {
        Navigate.NavigateTo($"/update/{StudentId}");
    }
}